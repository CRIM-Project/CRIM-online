'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

var _backbone = require('backbone');

var Backbone = _interopRequireWildcard(_backbone);

var _backboneEvents = require('../utils/backbone-events');

var _backboneEvents2 = _interopRequireDefault(_backboneEvents);

var _paginationTpl = require('../templates/pagination-tpl');

var _paginationTpl2 = _interopRequireDefault(_paginationTpl);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Pagination = function (_Backbone$View) {
    _inherits(Pagination, _Backbone$View);

    function Pagination() {
        _classCallCheck(this, Pagination);

        return _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).apply(this, arguments));
    }

    _createClass(Pagination, [{
        key: 'template',
        value: function template(tpl) {
            return (0, _paginationTpl2.default)(tpl);
        }
    }, {
        key: 'initialize',
        value: function initialize() {}
    }, {
        key: 'render',
        value: function render() {
            return this.$el.html(this.template());
        }
    }, {
        key: 'className',
        get: function get() {
            return "cnt-pagination";
        }
    }, {
        key: 'events',
        get: function get() {
            return {
                "click .cnt-pagination-next": function clickCntPaginationNext() {
                    _backboneEvents2.default.trigger("component:pagination:next");
                },
                "click .cnt-pagination-prev": function clickCntPaginationPrev() {
                    _backboneEvents2.default.trigger("component:pagination:prev");
                }
            };
        }
    }]);

    return Pagination;
}(Backbone.View);

exports.default = Pagination;